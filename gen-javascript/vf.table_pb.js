// source: vf.table.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_descriptor_pb = require('google-protobuf/google/protobuf/descriptor_pb.js');
goog.object.extend(proto, google_protobuf_descriptor_pb);
goog.exportSymbol('proto.vf.BoolS', null, global);
goog.exportSymbol('proto.vf.Column', null, global);
goog.exportSymbol('proto.vf.DateTimeS', null, global);
goog.exportSymbol('proto.vf.DecimalS', null, global);
goog.exportSymbol('proto.vf.DoubleS', null, global);
goog.exportSymbol('proto.vf.FloatS', null, global);
goog.exportSymbol('proto.vf.Int32S', null, global);
goog.exportSymbol('proto.vf.Int64S', null, global);
goog.exportSymbol('proto.vf.StringS', null, global);
goog.exportSymbol('proto.vf.Table', null, global);
goog.exportSymbol('proto.vf.XmlS', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vf.Table = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vf.Table.repeatedFields_, null);
};
goog.inherits(proto.vf.Table, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vf.Table.displayName = 'proto.vf.Table';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vf.Column = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vf.Column.repeatedFields_, null);
};
goog.inherits(proto.vf.Column, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vf.Column.displayName = 'proto.vf.Column';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vf.Int32S = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vf.Int32S.repeatedFields_, null);
};
goog.inherits(proto.vf.Int32S, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vf.Int32S.displayName = 'proto.vf.Int32S';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vf.Int64S = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vf.Int64S.repeatedFields_, null);
};
goog.inherits(proto.vf.Int64S, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vf.Int64S.displayName = 'proto.vf.Int64S';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vf.FloatS = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vf.FloatS.repeatedFields_, null);
};
goog.inherits(proto.vf.FloatS, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vf.FloatS.displayName = 'proto.vf.FloatS';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vf.DoubleS = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vf.DoubleS.repeatedFields_, null);
};
goog.inherits(proto.vf.DoubleS, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vf.DoubleS.displayName = 'proto.vf.DoubleS';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vf.DecimalS = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vf.DecimalS.repeatedFields_, null);
};
goog.inherits(proto.vf.DecimalS, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vf.DecimalS.displayName = 'proto.vf.DecimalS';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vf.DateTimeS = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vf.DateTimeS.repeatedFields_, null);
};
goog.inherits(proto.vf.DateTimeS, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vf.DateTimeS.displayName = 'proto.vf.DateTimeS';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vf.BoolS = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vf.BoolS.repeatedFields_, null);
};
goog.inherits(proto.vf.BoolS, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vf.BoolS.displayName = 'proto.vf.BoolS';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vf.StringS = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vf.StringS.repeatedFields_, null);
};
goog.inherits(proto.vf.StringS, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vf.StringS.displayName = 'proto.vf.StringS';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.vf.XmlS = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.vf.XmlS.repeatedFields_, null);
};
goog.inherits(proto.vf.XmlS, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.vf.XmlS.displayName = 'proto.vf.XmlS';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vf.Table.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vf.Table.prototype.toObject = function(opt_includeInstance) {
  return proto.vf.Table.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vf.Table} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vf.Table.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    columnsList: jspb.Message.toObjectList(msg.getColumnsList(),
    proto.vf.Column.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vf.Table}
 */
proto.vf.Table.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vf.Table;
  return proto.vf.Table.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vf.Table} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vf.Table}
 */
proto.vf.Table.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.vf.Column;
      reader.readMessage(value,proto.vf.Column.deserializeBinaryFromReader);
      msg.addColumns(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vf.Table.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vf.Table.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vf.Table} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vf.Table.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getColumnsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.vf.Column.serializeBinaryToWriter
    );
  }
};


/**
 * optional string Name = 1;
 * @return {string}
 */
proto.vf.Table.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vf.Table} returns this
 */
proto.vf.Table.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Column Columns = 2;
 * @return {!Array<!proto.vf.Column>}
 */
proto.vf.Table.prototype.getColumnsList = function() {
  return /** @type{!Array<!proto.vf.Column>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.vf.Column, 2));
};


/**
 * @param {!Array<!proto.vf.Column>} value
 * @return {!proto.vf.Table} returns this
*/
proto.vf.Table.prototype.setColumnsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.vf.Column=} opt_value
 * @param {number=} opt_index
 * @return {!proto.vf.Column}
 */
proto.vf.Table.prototype.addColumns = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.vf.Column, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vf.Table} returns this
 */
proto.vf.Table.prototype.clearColumnsList = function() {
  return this.setColumnsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vf.Column.repeatedFields_ = [15];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vf.Column.prototype.toObject = function(opt_includeInstance) {
  return proto.vf.Column.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vf.Column} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vf.Column.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    caption: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ordinal: jspb.Message.getFieldWithDefault(msg, 4, 0),
    store: msg.getStore_asB64(),
    nullsList: (f = jspb.Message.getRepeatedField(msg, 15)) == null ? undefined : f,
    aint32: (f = msg.getAint32()) && proto.vf.Int32S.toObject(includeInstance, f),
    aint64: (f = msg.getAint64()) && proto.vf.Int64S.toObject(includeInstance, f),
    afloat: (f = msg.getAfloat()) && proto.vf.FloatS.toObject(includeInstance, f),
    adouble: (f = msg.getAdouble()) && proto.vf.DoubleS.toObject(includeInstance, f),
    adecimal: (f = msg.getAdecimal()) && proto.vf.DecimalS.toObject(includeInstance, f),
    adatetime: (f = msg.getAdatetime()) && proto.vf.DateTimeS.toObject(includeInstance, f),
    abool: (f = msg.getAbool()) && proto.vf.BoolS.toObject(includeInstance, f),
    astring: (f = msg.getAstring()) && proto.vf.StringS.toObject(includeInstance, f),
    axml: (f = msg.getAxml()) && proto.vf.XmlS.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vf.Column}
 */
proto.vf.Column.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vf.Column;
  return proto.vf.Column.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vf.Column} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vf.Column}
 */
proto.vf.Column.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaption(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrdinal(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setStore(value);
      break;
    case 15:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addNulls(values[i]);
      }
      break;
    case 20:
      var value = new proto.vf.Int32S;
      reader.readMessage(value,proto.vf.Int32S.deserializeBinaryFromReader);
      msg.setAint32(value);
      break;
    case 21:
      var value = new proto.vf.Int64S;
      reader.readMessage(value,proto.vf.Int64S.deserializeBinaryFromReader);
      msg.setAint64(value);
      break;
    case 22:
      var value = new proto.vf.FloatS;
      reader.readMessage(value,proto.vf.FloatS.deserializeBinaryFromReader);
      msg.setAfloat(value);
      break;
    case 23:
      var value = new proto.vf.DoubleS;
      reader.readMessage(value,proto.vf.DoubleS.deserializeBinaryFromReader);
      msg.setAdouble(value);
      break;
    case 24:
      var value = new proto.vf.DecimalS;
      reader.readMessage(value,proto.vf.DecimalS.deserializeBinaryFromReader);
      msg.setAdecimal(value);
      break;
    case 25:
      var value = new proto.vf.DateTimeS;
      reader.readMessage(value,proto.vf.DateTimeS.deserializeBinaryFromReader);
      msg.setAdatetime(value);
      break;
    case 26:
      var value = new proto.vf.BoolS;
      reader.readMessage(value,proto.vf.BoolS.deserializeBinaryFromReader);
      msg.setAbool(value);
      break;
    case 27:
      var value = new proto.vf.StringS;
      reader.readMessage(value,proto.vf.StringS.deserializeBinaryFromReader);
      msg.setAstring(value);
      break;
    case 28:
      var value = new proto.vf.XmlS;
      reader.readMessage(value,proto.vf.XmlS.deserializeBinaryFromReader);
      msg.setAxml(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vf.Column.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vf.Column.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vf.Column} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vf.Column.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCaption();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOrdinal();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getStore_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getNullsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      15,
      f
    );
  }
  f = message.getAint32();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.vf.Int32S.serializeBinaryToWriter
    );
  }
  f = message.getAint64();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.vf.Int64S.serializeBinaryToWriter
    );
  }
  f = message.getAfloat();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.vf.FloatS.serializeBinaryToWriter
    );
  }
  f = message.getAdouble();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.vf.DoubleS.serializeBinaryToWriter
    );
  }
  f = message.getAdecimal();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto.vf.DecimalS.serializeBinaryToWriter
    );
  }
  f = message.getAdatetime();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      proto.vf.DateTimeS.serializeBinaryToWriter
    );
  }
  f = message.getAbool();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      proto.vf.BoolS.serializeBinaryToWriter
    );
  }
  f = message.getAstring();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      proto.vf.StringS.serializeBinaryToWriter
    );
  }
  f = message.getAxml();
  if (f != null) {
    writer.writeMessage(
      28,
      f,
      proto.vf.XmlS.serializeBinaryToWriter
    );
  }
};


/**
 * optional string Name = 1;
 * @return {string}
 */
proto.vf.Column.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.vf.Column} returns this
 */
proto.vf.Column.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Caption = 3;
 * @return {string}
 */
proto.vf.Column.prototype.getCaption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.vf.Column} returns this
 */
proto.vf.Column.prototype.setCaption = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 Ordinal = 4;
 * @return {number}
 */
proto.vf.Column.prototype.getOrdinal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.vf.Column} returns this
 */
proto.vf.Column.prototype.setOrdinal = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bytes Store = 2;
 * @return {!(string|Uint8Array)}
 */
proto.vf.Column.prototype.getStore = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes Store = 2;
 * This is a type-conversion wrapper around `getStore()`
 * @return {string}
 */
proto.vf.Column.prototype.getStore_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getStore()));
};


/**
 * optional bytes Store = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getStore()`
 * @return {!Uint8Array}
 */
proto.vf.Column.prototype.getStore_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getStore()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.vf.Column} returns this
 */
proto.vf.Column.prototype.setStore = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * repeated int32 Nulls = 15;
 * @return {!Array<number>}
 */
proto.vf.Column.prototype.getNullsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 15));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.vf.Column} returns this
 */
proto.vf.Column.prototype.setNullsList = function(value) {
  return jspb.Message.setField(this, 15, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.vf.Column} returns this
 */
proto.vf.Column.prototype.addNulls = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 15, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vf.Column} returns this
 */
proto.vf.Column.prototype.clearNullsList = function() {
  return this.setNullsList([]);
};


/**
 * optional Int32S AInt32 = 20;
 * @return {?proto.vf.Int32S}
 */
proto.vf.Column.prototype.getAint32 = function() {
  return /** @type{?proto.vf.Int32S} */ (
    jspb.Message.getWrapperField(this, proto.vf.Int32S, 20));
};


/**
 * @param {?proto.vf.Int32S|undefined} value
 * @return {!proto.vf.Column} returns this
*/
proto.vf.Column.prototype.setAint32 = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vf.Column} returns this
 */
proto.vf.Column.prototype.clearAint32 = function() {
  return this.setAint32(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vf.Column.prototype.hasAint32 = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional Int64S AInt64 = 21;
 * @return {?proto.vf.Int64S}
 */
proto.vf.Column.prototype.getAint64 = function() {
  return /** @type{?proto.vf.Int64S} */ (
    jspb.Message.getWrapperField(this, proto.vf.Int64S, 21));
};


/**
 * @param {?proto.vf.Int64S|undefined} value
 * @return {!proto.vf.Column} returns this
*/
proto.vf.Column.prototype.setAint64 = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vf.Column} returns this
 */
proto.vf.Column.prototype.clearAint64 = function() {
  return this.setAint64(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vf.Column.prototype.hasAint64 = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional FloatS AFloat = 22;
 * @return {?proto.vf.FloatS}
 */
proto.vf.Column.prototype.getAfloat = function() {
  return /** @type{?proto.vf.FloatS} */ (
    jspb.Message.getWrapperField(this, proto.vf.FloatS, 22));
};


/**
 * @param {?proto.vf.FloatS|undefined} value
 * @return {!proto.vf.Column} returns this
*/
proto.vf.Column.prototype.setAfloat = function(value) {
  return jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vf.Column} returns this
 */
proto.vf.Column.prototype.clearAfloat = function() {
  return this.setAfloat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vf.Column.prototype.hasAfloat = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional DoubleS ADouble = 23;
 * @return {?proto.vf.DoubleS}
 */
proto.vf.Column.prototype.getAdouble = function() {
  return /** @type{?proto.vf.DoubleS} */ (
    jspb.Message.getWrapperField(this, proto.vf.DoubleS, 23));
};


/**
 * @param {?proto.vf.DoubleS|undefined} value
 * @return {!proto.vf.Column} returns this
*/
proto.vf.Column.prototype.setAdouble = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vf.Column} returns this
 */
proto.vf.Column.prototype.clearAdouble = function() {
  return this.setAdouble(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vf.Column.prototype.hasAdouble = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional DecimalS ADecimal = 24;
 * @return {?proto.vf.DecimalS}
 */
proto.vf.Column.prototype.getAdecimal = function() {
  return /** @type{?proto.vf.DecimalS} */ (
    jspb.Message.getWrapperField(this, proto.vf.DecimalS, 24));
};


/**
 * @param {?proto.vf.DecimalS|undefined} value
 * @return {!proto.vf.Column} returns this
*/
proto.vf.Column.prototype.setAdecimal = function(value) {
  return jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vf.Column} returns this
 */
proto.vf.Column.prototype.clearAdecimal = function() {
  return this.setAdecimal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vf.Column.prototype.hasAdecimal = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional DateTimeS ADateTime = 25;
 * @return {?proto.vf.DateTimeS}
 */
proto.vf.Column.prototype.getAdatetime = function() {
  return /** @type{?proto.vf.DateTimeS} */ (
    jspb.Message.getWrapperField(this, proto.vf.DateTimeS, 25));
};


/**
 * @param {?proto.vf.DateTimeS|undefined} value
 * @return {!proto.vf.Column} returns this
*/
proto.vf.Column.prototype.setAdatetime = function(value) {
  return jspb.Message.setWrapperField(this, 25, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vf.Column} returns this
 */
proto.vf.Column.prototype.clearAdatetime = function() {
  return this.setAdatetime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vf.Column.prototype.hasAdatetime = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional BoolS ABool = 26;
 * @return {?proto.vf.BoolS}
 */
proto.vf.Column.prototype.getAbool = function() {
  return /** @type{?proto.vf.BoolS} */ (
    jspb.Message.getWrapperField(this, proto.vf.BoolS, 26));
};


/**
 * @param {?proto.vf.BoolS|undefined} value
 * @return {!proto.vf.Column} returns this
*/
proto.vf.Column.prototype.setAbool = function(value) {
  return jspb.Message.setWrapperField(this, 26, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vf.Column} returns this
 */
proto.vf.Column.prototype.clearAbool = function() {
  return this.setAbool(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vf.Column.prototype.hasAbool = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional StringS AString = 27;
 * @return {?proto.vf.StringS}
 */
proto.vf.Column.prototype.getAstring = function() {
  return /** @type{?proto.vf.StringS} */ (
    jspb.Message.getWrapperField(this, proto.vf.StringS, 27));
};


/**
 * @param {?proto.vf.StringS|undefined} value
 * @return {!proto.vf.Column} returns this
*/
proto.vf.Column.prototype.setAstring = function(value) {
  return jspb.Message.setWrapperField(this, 27, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vf.Column} returns this
 */
proto.vf.Column.prototype.clearAstring = function() {
  return this.setAstring(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vf.Column.prototype.hasAstring = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional XmlS AXml = 28;
 * @return {?proto.vf.XmlS}
 */
proto.vf.Column.prototype.getAxml = function() {
  return /** @type{?proto.vf.XmlS} */ (
    jspb.Message.getWrapperField(this, proto.vf.XmlS, 28));
};


/**
 * @param {?proto.vf.XmlS|undefined} value
 * @return {!proto.vf.Column} returns this
*/
proto.vf.Column.prototype.setAxml = function(value) {
  return jspb.Message.setWrapperField(this, 28, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.vf.Column} returns this
 */
proto.vf.Column.prototype.clearAxml = function() {
  return this.setAxml(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.vf.Column.prototype.hasAxml = function() {
  return jspb.Message.getField(this, 28) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vf.Int32S.repeatedFields_ = [20];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vf.Int32S.prototype.toObject = function(opt_includeInstance) {
  return proto.vf.Int32S.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vf.Int32S} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vf.Int32S.toObject = function(includeInstance, msg) {
  var f, obj = {
    storeList: (f = jspb.Message.getRepeatedField(msg, 20)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vf.Int32S}
 */
proto.vf.Int32S.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vf.Int32S;
  return proto.vf.Int32S.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vf.Int32S} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vf.Int32S}
 */
proto.vf.Int32S.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 20:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addStore(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vf.Int32S.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vf.Int32S.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vf.Int32S} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vf.Int32S.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoreList();
  if (f.length > 0) {
    writer.writePackedInt32(
      20,
      f
    );
  }
};


/**
 * repeated int32 Store = 20;
 * @return {!Array<number>}
 */
proto.vf.Int32S.prototype.getStoreList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 20));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.vf.Int32S} returns this
 */
proto.vf.Int32S.prototype.setStoreList = function(value) {
  return jspb.Message.setField(this, 20, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.vf.Int32S} returns this
 */
proto.vf.Int32S.prototype.addStore = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 20, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vf.Int32S} returns this
 */
proto.vf.Int32S.prototype.clearStoreList = function() {
  return this.setStoreList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vf.Int64S.repeatedFields_ = [20];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vf.Int64S.prototype.toObject = function(opt_includeInstance) {
  return proto.vf.Int64S.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vf.Int64S} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vf.Int64S.toObject = function(includeInstance, msg) {
  var f, obj = {
    storeList: (f = jspb.Message.getRepeatedField(msg, 20)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vf.Int64S}
 */
proto.vf.Int64S.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vf.Int64S;
  return proto.vf.Int64S.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vf.Int64S} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vf.Int64S}
 */
proto.vf.Int64S.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 20:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addStore(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vf.Int64S.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vf.Int64S.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vf.Int64S} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vf.Int64S.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoreList();
  if (f.length > 0) {
    writer.writePackedInt64(
      20,
      f
    );
  }
};


/**
 * repeated int64 Store = 20;
 * @return {!Array<number>}
 */
proto.vf.Int64S.prototype.getStoreList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 20));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.vf.Int64S} returns this
 */
proto.vf.Int64S.prototype.setStoreList = function(value) {
  return jspb.Message.setField(this, 20, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.vf.Int64S} returns this
 */
proto.vf.Int64S.prototype.addStore = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 20, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vf.Int64S} returns this
 */
proto.vf.Int64S.prototype.clearStoreList = function() {
  return this.setStoreList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vf.FloatS.repeatedFields_ = [20];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vf.FloatS.prototype.toObject = function(opt_includeInstance) {
  return proto.vf.FloatS.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vf.FloatS} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vf.FloatS.toObject = function(includeInstance, msg) {
  var f, obj = {
    storeList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 20)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vf.FloatS}
 */
proto.vf.FloatS.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vf.FloatS;
  return proto.vf.FloatS.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vf.FloatS} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vf.FloatS}
 */
proto.vf.FloatS.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 20:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addStore(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vf.FloatS.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vf.FloatS.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vf.FloatS} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vf.FloatS.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoreList();
  if (f.length > 0) {
    writer.writePackedFloat(
      20,
      f
    );
  }
};


/**
 * repeated float Store = 20;
 * @return {!Array<number>}
 */
proto.vf.FloatS.prototype.getStoreList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 20));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.vf.FloatS} returns this
 */
proto.vf.FloatS.prototype.setStoreList = function(value) {
  return jspb.Message.setField(this, 20, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.vf.FloatS} returns this
 */
proto.vf.FloatS.prototype.addStore = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 20, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vf.FloatS} returns this
 */
proto.vf.FloatS.prototype.clearStoreList = function() {
  return this.setStoreList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vf.DoubleS.repeatedFields_ = [20];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vf.DoubleS.prototype.toObject = function(opt_includeInstance) {
  return proto.vf.DoubleS.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vf.DoubleS} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vf.DoubleS.toObject = function(includeInstance, msg) {
  var f, obj = {
    storeList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 20)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vf.DoubleS}
 */
proto.vf.DoubleS.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vf.DoubleS;
  return proto.vf.DoubleS.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vf.DoubleS} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vf.DoubleS}
 */
proto.vf.DoubleS.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 20:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addStore(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vf.DoubleS.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vf.DoubleS.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vf.DoubleS} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vf.DoubleS.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoreList();
  if (f.length > 0) {
    writer.writePackedDouble(
      20,
      f
    );
  }
};


/**
 * repeated double Store = 20;
 * @return {!Array<number>}
 */
proto.vf.DoubleS.prototype.getStoreList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 20));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.vf.DoubleS} returns this
 */
proto.vf.DoubleS.prototype.setStoreList = function(value) {
  return jspb.Message.setField(this, 20, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.vf.DoubleS} returns this
 */
proto.vf.DoubleS.prototype.addStore = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 20, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vf.DoubleS} returns this
 */
proto.vf.DoubleS.prototype.clearStoreList = function() {
  return this.setStoreList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vf.DecimalS.repeatedFields_ = [20];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vf.DecimalS.prototype.toObject = function(opt_includeInstance) {
  return proto.vf.DecimalS.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vf.DecimalS} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vf.DecimalS.toObject = function(includeInstance, msg) {
  var f, obj = {
    storeList: (f = jspb.Message.getRepeatedField(msg, 20)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vf.DecimalS}
 */
proto.vf.DecimalS.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vf.DecimalS;
  return proto.vf.DecimalS.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vf.DecimalS} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vf.DecimalS}
 */
proto.vf.DecimalS.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.addStore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vf.DecimalS.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vf.DecimalS.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vf.DecimalS} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vf.DecimalS.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoreList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      20,
      f
    );
  }
};


/**
 * repeated string Store = 20;
 * @return {!Array<string>}
 */
proto.vf.DecimalS.prototype.getStoreList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 20));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.vf.DecimalS} returns this
 */
proto.vf.DecimalS.prototype.setStoreList = function(value) {
  return jspb.Message.setField(this, 20, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.vf.DecimalS} returns this
 */
proto.vf.DecimalS.prototype.addStore = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 20, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vf.DecimalS} returns this
 */
proto.vf.DecimalS.prototype.clearStoreList = function() {
  return this.setStoreList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vf.DateTimeS.repeatedFields_ = [20];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vf.DateTimeS.prototype.toObject = function(opt_includeInstance) {
  return proto.vf.DateTimeS.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vf.DateTimeS} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vf.DateTimeS.toObject = function(includeInstance, msg) {
  var f, obj = {
    storeList: (f = jspb.Message.getRepeatedField(msg, 20)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vf.DateTimeS}
 */
proto.vf.DateTimeS.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vf.DateTimeS;
  return proto.vf.DateTimeS.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vf.DateTimeS} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vf.DateTimeS}
 */
proto.vf.DateTimeS.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 20:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addStore(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vf.DateTimeS.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vf.DateTimeS.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vf.DateTimeS} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vf.DateTimeS.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoreList();
  if (f.length > 0) {
    writer.writePackedInt64(
      20,
      f
    );
  }
};


/**
 * repeated int64 Store = 20;
 * @return {!Array<number>}
 */
proto.vf.DateTimeS.prototype.getStoreList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 20));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.vf.DateTimeS} returns this
 */
proto.vf.DateTimeS.prototype.setStoreList = function(value) {
  return jspb.Message.setField(this, 20, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.vf.DateTimeS} returns this
 */
proto.vf.DateTimeS.prototype.addStore = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 20, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vf.DateTimeS} returns this
 */
proto.vf.DateTimeS.prototype.clearStoreList = function() {
  return this.setStoreList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vf.BoolS.repeatedFields_ = [20];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vf.BoolS.prototype.toObject = function(opt_includeInstance) {
  return proto.vf.BoolS.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vf.BoolS} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vf.BoolS.toObject = function(includeInstance, msg) {
  var f, obj = {
    storeList: (f = jspb.Message.getRepeatedBooleanField(msg, 20)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vf.BoolS}
 */
proto.vf.BoolS.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vf.BoolS;
  return proto.vf.BoolS.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vf.BoolS} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vf.BoolS}
 */
proto.vf.BoolS.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 20:
      var values = /** @type {!Array<boolean>} */ (reader.isDelimited() ? reader.readPackedBool() : [reader.readBool()]);
      for (var i = 0; i < values.length; i++) {
        msg.addStore(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vf.BoolS.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vf.BoolS.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vf.BoolS} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vf.BoolS.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoreList();
  if (f.length > 0) {
    writer.writePackedBool(
      20,
      f
    );
  }
};


/**
 * repeated bool Store = 20;
 * @return {!Array<boolean>}
 */
proto.vf.BoolS.prototype.getStoreList = function() {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 20));
};


/**
 * @param {!Array<boolean>} value
 * @return {!proto.vf.BoolS} returns this
 */
proto.vf.BoolS.prototype.setStoreList = function(value) {
  return jspb.Message.setField(this, 20, value || []);
};


/**
 * @param {boolean} value
 * @param {number=} opt_index
 * @return {!proto.vf.BoolS} returns this
 */
proto.vf.BoolS.prototype.addStore = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 20, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vf.BoolS} returns this
 */
proto.vf.BoolS.prototype.clearStoreList = function() {
  return this.setStoreList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vf.StringS.repeatedFields_ = [20];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vf.StringS.prototype.toObject = function(opt_includeInstance) {
  return proto.vf.StringS.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vf.StringS} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vf.StringS.toObject = function(includeInstance, msg) {
  var f, obj = {
    storeList: (f = jspb.Message.getRepeatedField(msg, 20)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vf.StringS}
 */
proto.vf.StringS.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vf.StringS;
  return proto.vf.StringS.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vf.StringS} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vf.StringS}
 */
proto.vf.StringS.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.addStore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vf.StringS.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vf.StringS.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vf.StringS} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vf.StringS.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoreList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      20,
      f
    );
  }
};


/**
 * repeated string Store = 20;
 * @return {!Array<string>}
 */
proto.vf.StringS.prototype.getStoreList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 20));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.vf.StringS} returns this
 */
proto.vf.StringS.prototype.setStoreList = function(value) {
  return jspb.Message.setField(this, 20, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.vf.StringS} returns this
 */
proto.vf.StringS.prototype.addStore = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 20, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vf.StringS} returns this
 */
proto.vf.StringS.prototype.clearStoreList = function() {
  return this.setStoreList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.vf.XmlS.repeatedFields_ = [20];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.vf.XmlS.prototype.toObject = function(opt_includeInstance) {
  return proto.vf.XmlS.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.vf.XmlS} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vf.XmlS.toObject = function(includeInstance, msg) {
  var f, obj = {
    storeList: (f = jspb.Message.getRepeatedField(msg, 20)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.vf.XmlS}
 */
proto.vf.XmlS.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.vf.XmlS;
  return proto.vf.XmlS.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.vf.XmlS} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.vf.XmlS}
 */
proto.vf.XmlS.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.addStore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.vf.XmlS.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.vf.XmlS.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.vf.XmlS} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.vf.XmlS.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoreList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      20,
      f
    );
  }
};


/**
 * repeated string Store = 20;
 * @return {!Array<string>}
 */
proto.vf.XmlS.prototype.getStoreList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 20));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.vf.XmlS} returns this
 */
proto.vf.XmlS.prototype.setStoreList = function(value) {
  return jspb.Message.setField(this, 20, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.vf.XmlS} returns this
 */
proto.vf.XmlS.prototype.addStore = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 20, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.vf.XmlS} returns this
 */
proto.vf.XmlS.prototype.clearStoreList = function() {
  return this.setStoreList([]);
};


goog.object.extend(exports, proto.vf);
